- name: Reading whoami
  shell: whoami
  register: wai

- name: set facts on local
  set_fact:
    nexus_username: "{{ lookup('env', 'nexusUser') }}"
    nexus_password: "{{ lookup('env', 'nexusPass') }}"
- debug: msg="{{nexus_username}}"

- name: create temp dir
  tempfile:
    state: directory
  register: tmpdir
###############
- name: Getting Oracle driver to slave workspace
  get_url:
    url: "{{Oracle_jdbc_URL| default('https://base.sw.sbc.space/nexus/service/local/repositories/Nexus_PROD/content/Nexus_PROD/CI00360902_TECH_CORE/D-09.004.02-01/CI00360902_TECH_CORE-D-09.004.02-01-distrib.zip')}}"
    dest: "{{WORKSPACE}}/ojdbc-7.zip"
    username: "{{ nexus_username }}"
    password: "{{ nexus_password }}"
    validate_certs: no
  ignore_errors: yes
  delegate_to: 127.0.0.1

- name: Getting PostgreSQL driver to slave workspace
  get_url:
    url: "{{PostgreSQL_jdbc_URL| default('https://base.sw.sbc.space/nexus/service/local/repositories/Nexus_PROD/content/Nexus_PROD/CI00360902_TECH_CORE/D-09.004.08-01/CI00360902_TECH_CORE-D-09.004.08-01-distrib.zip')}}"
    dest: "{{WORKSPACE}}/postgres_jdbc.zip"
    username: "{{ nexus_username }}"
    password: "{{ nexus_password }}"
    validate_certs: no
  ignore_errors: yes
  delegate_to: 127.0.0.1

- name: copy ojdbc-7.zip to /tmp
  copy:
    src: "{{ WORKSPACE }}/ojdbc-7.zip"
    dest: "{{tmpdir.path}}"
    mode: '0777'
  ignore_errors: yes

- name: Unzip Oracle driver
  unarchive:
    src: "{{tmpdir.path}}/ojdbc-7.zip"
    dest: "{{tmpdir.path}}"
    remote_src: yes
  ignore_errors: yes

- name: Create tmpdir.path/PG directory
  file:
    path: "/tmp/PG"
    state: directory

- name: copy postgres_jdbc.zip to /tmp
  copy:
    src: "{{ WORKSPACE }}/postgres_jdbc.zip"
    dest: "/tmp/PG"
    mode: '0777'
  ignore_errors: yes

- name: Unzip postgres_jdbc.zip
  unarchive:
    src: "/tmp/PG/postgres_jdbc.zip"
    dest: "/tmp/PG"
    remote_src: yes
  ignore_errors: yes


- set_fact:
    ncWf: 1
#- name: WF2 determination
#  shell: ls /usr |grep WF2 |sed "s/WF//" $1
#  register: wfcnt

#- set_fact:
#    ncWf: "{{ wfcnt.stdout|int | default(1) }}"
#  ignore_errors: Yes
#  when: wfcnt.stdout == '2'
#- debug: msg="WF count - {{ ncWf }}"
#####################################
- name: 'Adding template to sudoers'
  lineinfile:
    path: /etc/sudoers
    line: '{{ item }}'
    state: present
    backup: yes
    validate: /usr/sbin/visudo -cf %s
  with_items:
    - "Defaults: {{wf_os_user}}       !requiretty"
    - "{{wf_os_user}} ALL=(ALL)    NOPASSWD: /bin/systemctl * wildfly, /bin/systemctl * wildfly.service, /bin/systemctl * wildfly-core,  /bin/systemctl * wildfly-core.service"
#    - "wfadmin ALL=(ALL)    NOPASSWD: /bin/systemctl daemon-reload"
#    - "wfadmin ALL=(ALL)    NOPASSWD: /bin/systemctl restart nginx"
  become: yes
  when: wai.stdout != wf_os_user

- name: 'Adding template to sudoers'
  lineinfile:
    path: /etc/sudoers
    line: '{{ item }}'
    state: absent
    backup: yes
    validate: /usr/sbin/visudo -cf %s
  with_items:
#    - "wfadmin ALL=(ALL)    NOPASSWD: /bin/systemctl daemon-reload"
    - "{{wf_os_user}} ALL=(ALL)    NOPASSWD: /bin/systemctl start wildfly"
    - "{{wf_os_user}} ALL=(ALL)    NOPASSWD: /bin/systemctl restart wildfly"
    - "{{wf_os_user}} ALL=(ALL)    NOPASSWD: /bin/systemctl stop wildfly"
    - "{{wf_os_user}} ALL=(ALL)    NOPASSWD: /bin/systemctl status wildfly"
#    - "wfadmin ALL=(ALL)    NOPASSWD: /bin/systemctl restart nginx"
  become: yes
  when: wai.stdout != wf_os_user

- name: run script
  shell: "{{wf_install_dir}}/bin/add-user.sh -u {{wf_user}} -p {{wfadminpass}}"
  become: yes
  when: wai.stdout != wf_os_user
  no_log: yes
#  when: wai.stdout == 'pprb_dev'

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0755
    recurse: yes
  become: yes
  with_items:
    - "{{wf_install_dir}}/native_lib"
    - "/logs/WF"
    - "/logs/WF/custodian-selfcheck"
    - "/logs/WF/pprblogs"
    - "{{wf_install_dir}}/tmp"
    - "{{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
    - "{{wf_install_dir}}/standalone/lib/ext/org/postgresql/main"
#    - "/usr/WF/WF_PPRB/standalone/lib/ext/org/wildfly/extension/undertow/main"
  when: wai.stdout != wf_os_user
#  when: wai.stdout == 'pprb_dev'
#############################################
- name: create symlink
  file:
    src: "/logs/WF/pprblogs"
    dest: "/opt/pprb"
    state: link
    force: yes
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0755
  become: yes
  when: wai.stdout != wf_os_user and Stand != 'AVANGARD' and Stand != 'TORPEDO'
#  when: wai.stdout == 'pprb_dev'

- name: copy pprb_wf_configs/oracle/main
  shell: "cp {{item}} {{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
  with_items:
    - "{{tmpdir.path}}/*.xml"
    - "{{tmpdir.path}}/*.jar"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes

- name: copy org/postgresql/main
  shell: "cp {{item}} {{wf_install_dir}}/standalone/lib/ext/org/postgresql/main"
  with_items:
    - "/tmp/PG/*.xml"
    - "/tmp/PG/*.jar"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes

- name: 'chown oracle/main & postgresql/main'
  file:
    path: "{{ item }}"
    state: directory
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0700
    recurse: yes
  with_items:
    - "{{wf_install_dir}}/modules/com"
    - "{{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
    - "{{wf_install_dir}}/standalone/lib/ext/org/postgresql/main"
  become: yes
  when: wai.stdout != wf_os_user

- name: "Start WildFly service"
  systemd:
    name: wildfly
    state: started
  become: yes
  ignore_errors: true
  when: wai.stdout != wf_os_user

- name: setup oracle in wildfly 1
  shell: |
    {{ item }}
  with_items:
    - "./jboss-cli.sh --connect --commands=\"module add --name=com.oracle --resources={{wf_install_dir}}/standalone/lib/ext/com/oracle/main/ojdbc7.jar --module-xml={{wf_install_dir}}/standalone/lib/ext/com/oracle/main/module.xml\""
  args:
    chdir: "{{wf_install_dir}}/bin"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes

- name: setup PostgreSQL in wildfly 1
  shell: |
    {{ item }}
  with_items:
    - "./jboss-cli.sh --connect --commands=\"module add --name=org.postgresql --resources={{wf_install_dir}}/standalone/lib/ext/org/postgresql/main/postgresql-42.2.16.jar --dependencies=javax.api,javax.transaction.api\""
  args:
    chdir: "{{wf_install_dir}}/bin"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes

- name: 'chown oracle/main org/postgresql/main files'
  file:
    path: "{{ item }}"
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0644
  with_items:
    - "{{wf_install_dir}}/modules/com/oracle/main/module.xml"
    - "{{wf_install_dir}}/modules/com/oracle/main/ojdbc7.jar"
    - "{{wf_install_dir}}/modules/org/postgresql/main/postgresql-42.2.16.jar"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes

- name: copy pprb_wf_configs/oracle/main
  shell: "cp {{wf_install_dir}}/modules/com/oracle/main/* {{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes

- name: copy org/postgresql/main/
  shell: "cp {{wf_install_dir}}/modules/org/postgresql/main/* {{wf_install_dir}}/standalone/lib/ext/org/postgresql/main"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes

- name: setup oracle in wildfly 2
  shell: |
    {{ item }}
  with_items:
    - "./jboss-cli.sh --connect --commands=\"/subsystem=datasources/jdbc-driver=oracle:add(driver-module-name=com.oracle,driver-xa-datasource-class-name=oracle.jdbc.xa.client.OracleXADataSource)\""
  args:
    chdir: "{{wf_install_dir}}/bin"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes


- name: setup postgresql in wildfly 2
  shell: |
    {{ item }}
  with_items:
    - "./jboss-cli.sh --connect --commands=\"/subsystem=datasources/jdbc-driver=postgres:add(driver-name=postgres,driver-module-name=org.postgresql,driver-class-name=org.postgresql.Driver)\""
  args:
    chdir: "{{wf_install_dir}}/bin"
  become: yes
  when: wai.stdout != wf_os_user
  ignore_errors: yes



####################################################

####################################################
- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0755
    recurse: yes
  #become: yes
  with_items:
    - "{{wf_install_dir}}/native_lib"
    - "/logs/WF"
    - "/logs/WF/custodian-selfcheck"
    - "/logs/WF/pprblogs"
    - "{{wf_install_dir}}/tmp"
#    - "/usr/WF/WF_PPRB/modules/system/layers/base/com/oracle/main"
    - "{{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
#    - "/usr/WF/WF_PPRB/modules/system/layers/base/org/wildfly/extension/undertow/main"
#    - "/usr/WF/WF_PPRB/standalone/lib/ext/org/wildfly/extension/undertow/main"
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'
#############################################
#- name: create symlink
#  file:
#    src: "/logs/WF/pprblogs"
#    dest: "/opt/pprb"
#    state: link
#    force: yes
#    owner: '{{ wildfly_user }}'
#    group: '{{ wildfly_group }}'
#    mode: 0755
#  #become: yes
#  when: wai.stdout != 'pprb_dev'

- name: copy pprb_wf_configs/oracle/main
#  shell: cp /tmp/pprb_wf_configs/oracle/main/* /usr/WF/WF_PPRB/modules/system/layers/base/com/oracle/main
#  shell: "cp /tmp/pprb_wf_configs/oracle/main/* {{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
  shell: "cp {{item}} {{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
#  shell: "cp {{tmpdir.path}}/*.jar {{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
  #become: yes
  with_items:
    - "{{tmpdir.path}}/*.xml"
    - "{{tmpdir.path}}/*.jar"
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

#- name: copy /tmp/pprb_wf_configs/undertow/main/
##  shell: cp /tmp/pprb_wf_configs/undertow/main/* /usr/WF/WF_PPRB/modules/system/layers/base/org/wildfly/extension/undertow/main
#  shell: cp /tmp/pprb_wf_configs/undertow/main/* /usr/WF/WF_PPRB/standalone/lib/ext/org/wildfly/extension/undertow/main
##  become: yes
#  when: wai.stdout != 'pprb_dev'

- name: 'chown oracle/main & undertow/main'
  file:
    path: "{{ item }}"
    state: directory
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0700
#    recurse: yes
  with_items:
#    - "/usr/WF/WF_PPRB/modules/system/layers/base/org/wildfly/extension/undertow/main"
#    - "/usr/WF/WF_PPRB/modules/system/layers/base/com/oracle/main"
#    - "/usr/WF/WF_PPRB/standalone/lib/ext/org/wildfly/extension/undertow/main"
    - "{{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
#  become: yes
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

- name: run script
  shell: "{{wf_install_dir}}/bin/add-user.sh -u fly -p fly"
  #become: yes
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

- name: "Start WildFly service"
  systemd:
    name: wildfly
    state: started
#  become: yes
  ignore_errors: true
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

- name: setup oracle in wildfly 1
  shell: |
    {{ item }}
  with_items:
    #    - ./jboss-cli.sh -–connect -–commands="module add --name=com.oracle --resources=/usr/WF/WF_PPRB/standalone/lib/ext/com/oracle/main/ojdbc7.jar --dependencies=javax.api,javax.transaction.api,javax.servlet.api"
    #    - "./jboss-cli.sh -–connect -–commands='module add --name=com.oracle --resources={{wf_install_dir}}/standalone/lib/ext/com/oracle/main/ojdbc7.jar --module-xml={{wf_install_dir}}/standalone/lib/ext/com/oracle/main/module.xml'"
    - "./jboss-cli.sh --connect --commands=\"module add --name=com.oracle --resources={{wf_install_dir}}/standalone/lib/ext/com/oracle/main/ojdbc7.jar --module-xml={{wf_install_dir}}/standalone/lib/ext/com/oracle/main/module.xml\""
  # Hide sensitive info
#  no_log: "{{ enable_no_log | default(true) }}"
  args:
    chdir: "{{wf_install_dir}}/bin"
  #become: yes
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

- name: 'chown oracle/main dir'
  file:
    path: "{{ item }}"
    state: directory
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0700
    recurse: yes
  with_items:
    #    - "/usr/WF/WF_PPRB/modules/system/layers/base/org/wildfly/extension/undertow/main"
    #    - "/usr/WF/WF_PPRB/modules/system/layers/base/com/oracle/main"
    #    - "/usr/WF/WF_PPRB/standalone/lib/ext/org/wildfly/extension/undertow/main"
    - "{{wf_install_dir}}/modules/com"
    - "{{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
#  become: yes
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

- name: 'chown oracle/main files'
  file:
    path: "{{ item }}"
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: 0644
  with_items:
    - "{{wf_install_dir}}/modules/com/oracle/main/module.xml"
    - "{{wf_install_dir}}/modules/com/oracle/main/ojdbc7.jar"
  #  become: yes
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

- name: copy pprb_wf_configs/oracle/main
  shell: "cp {{wf_install_dir}}/modules/com/oracle/main/* {{wf_install_dir}}/standalone/lib/ext/com/oracle/main"
  #become: yes
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

- name: setup oracle in wildfly 2
  shell: |
    {{ item }}
  with_items:
    #    - ./jboss-cli.sh -–connect -–commands="/subsystem=datasources/jdbc-driver=oracle:add(driver-module-name=com.oracle,driver-xa-datasource-class-name=oracle.jdbc.xa.client.OracleXADataSource)"
    - "./jboss-cli.sh --connect --commands=\"/subsystem=datasources/jdbc-driver=oracle:add(driver-module-name=com.oracle,driver-xa-datasource-class-name=oracle.jdbc.xa.client.OracleXADataSource)\""
  # Hide sensitive info
#  no_log: "{{ enable_no_log | default(true) }}"
  args:
    chdir: "{{wf_install_dir}}/bin"
  #become: yes
  when: wai.stdout == wf_os_user
#  when: wai.stdout != 'pprb_dev'

